package tetrominos

import (
	"reflect"
	"testing"
)

func TestRotate(t *testing.T) {
	data := []struct {
		in  []Coords
		out []Coords
	}{
		{
			[]Coords{{5, 14}, {6, 14}, {5, 13}, {6, 13}, {4, 13}, {4, 14}, {5, 15}, {6, 15}, {7, 13}, {7, 14}},
			[]Coords{{5, 14}, {5, 13}, {6, 13}, {6, 14}, {6, 12}, {5, 12}, {4, 13}, {4, 14}, {6, 15}, {5, 15}},
		},
		{
			[]Coords{{5, 14}, {5, 13}, {6, 13}, {6, 14}, {6, 12}, {5, 12}, {4, 13}, {4, 14}, {6, 15}, {5, 15}},
			[]Coords{{5, 14}, {6, 13}, {6, 14}, {5, 13}, {7, 14}, {7, 13}, {6, 12}, {5, 12}, {4, 14}, {4, 13}},
		},
		{
			[]Coords{{5, 14}, {6, 13}, {6, 14}, {5, 13}, {7, 14}, {7, 13}, {6, 12}, {5, 12}, {4, 14}, {4, 13}},
			[]Coords{{5, 14}, {6, 14}, {5, 13}, {6, 13}, {5, 15}, {6, 15}, {7, 14}, {7, 13}, {5, 12}, {6, 12}},
		},
		{
			[]Coords{{5, 14}, {6, 14}, {5, 13}, {6, 13}, {5, 15}, {6, 15}, {7, 14}, {7, 13}, {5, 12}, {6, 12}},
			[]Coords{{5, 14}, {5, 13}, {6, 13}, {6, 14}, {4, 13}, {4, 14}, {5, 15}, {6, 15}, {7, 13}, {7, 14}},
		},
	}

	for _, d := range data {
		shape := &shapeT{d.in}
		Rotate(shape)
		if reflect.DeepEqual(shape.parts, d.out) == false {
			t.Errorf("shape.parts == %v, expected %v", shape.parts, d.out)
		}
	}
}
